{"ast":null,"code":"var _jsxFileName = \"/Users/ashleyhoath/Code/Projects/puppyBowlReactProject/src/playerList.js\";\nimport React from 'react';\nimport PlayerRow from './PlayerRow';\n//import { puppyData } from './puppyData';\n\n// \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerList = props => {\n  //const {getSinlgePlayer, setSelectedPlayer} =props;\n  //console.log(props.players)\n  // map takes any named paramater and you can use dot notation to get to anything in the object\n  //player is just a w\n  const playersToMap = props.players.map(player => {\n    console.log(player);\n    return /*#__PURE__*/_jsxDEV(PlayerRow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n\n    // <div class =\"single-player-card\">\n    // <div class =\"header-info\">\n    //     <p class =\"pup-title\">{player.name}</p>\n    //     <p class =\"pup-number\">#{player.id}</p>\n    // </div>\n    // <img src={player.imageUrl} />\n    // <button class=\"detail-button\" data-id={player.id}>See details</button>\n    // </div>\n    ;\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"players-container\",\n    children: playersToMap\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 11\n  }, this);\n};\n_c = PlayerList;\nexport default PlayerList;\nvar _c;\n$RefreshReg$(_c, \"PlayerList\");","map":{"version":3,"names":["React","PlayerRow","PlayerList","props","playersToMap","players","map","player","console","log"],"sources":["/Users/ashleyhoath/Code/Projects/puppyBowlReactProject/src/playerList.js"],"sourcesContent":["import React from 'react';\nimport PlayerRow from './PlayerRow';\n//import { puppyData } from './puppyData';\n\n// \nconst PlayerList = (props) => {\n//const {getSinlgePlayer, setSelectedPlayer} =props;\n    //console.log(props.players)\n    // map takes any named paramater and you can use dot notation to get to anything in the object\n    //player is just a w\n    const playersToMap = props.players.map((player) => {\n        console.log(player);\n        return(\n            <PlayerRow />\n    \n            // <div class =\"single-player-card\">\n            // <div class =\"header-info\">\n            //     <p class =\"pup-title\">{player.name}</p>\n            //     <p class =\"pup-number\">#{player.id}</p>\n            // </div>\n            // <img src={player.imageUrl} />\n            // <button class=\"detail-button\" data-id={player.id}>See details</button>\n            // </div>\n            );\n     })\n      return ( \n          <div id ='players-container'>{playersToMap}</div>\n             );\n    \n    }\n    \nexport default PlayerList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC;;AAEA;AAAA;AACA,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC9B;EACI;EACA;EACA;EACA,MAAMC,YAAY,GAAGD,KAAK,CAACE,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;IAC/CC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB,oBACI,QAAC,SAAS;MAAA;MAAA;MAAA;IAAA;;IAEV;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAAA;EAEP,CAAC,CAAC;;EACD,oBACI;IAAK,EAAE,EAAE,mBAAmB;IAAA,UAAEH;EAAY;IAAA;IAAA;IAAA;EAAA,QAAO;AAGvD,CAAC;AAAA,KAxBCF,UAAU;AA0BhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}